# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import crazy_rtc_pb2 as crazy__rtc__pb2


class SaiyaStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Robot2Saiya = channel.stream_stream(
        '/crazy_rtc.Saiya/Robot2Saiya',
        request_serializer=crazy__rtc__pb2.CrazyMsg.SerializeToString,
        response_deserializer=crazy__rtc__pb2.CrazyMsg.FromString,
        )
    self.Web2Saiya = channel.stream_stream(
        '/crazy_rtc.Saiya/Web2Saiya',
        request_serializer=crazy__rtc__pb2.CrazyMsg.SerializeToString,
        response_deserializer=crazy__rtc__pb2.CrazyMsg.FromString,
        )
    self.Mobile2Saiya = channel.stream_stream(
        '/crazy_rtc.Saiya/Mobile2Saiya',
        request_serializer=crazy__rtc__pb2.CrazyMsg.SerializeToString,
        response_deserializer=crazy__rtc__pb2.CrazyMsg.FromString,
        )
    self.GetDevList = channel.unary_unary(
        '/crazy_rtc.Saiya/GetDevList',
        request_serializer=crazy__rtc__pb2.EmailReq.SerializeToString,
        response_deserializer=crazy__rtc__pb2.DeviceList.FromString,
        )
    self.GetDevInfo = channel.unary_unary(
        '/crazy_rtc.Saiya/GetDevInfo',
        request_serializer=crazy__rtc__pb2.DevReq.SerializeToString,
        response_deserializer=crazy__rtc__pb2.DeviceInfo.FromString,
        )


class SaiyaServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Robot2Saiya(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Web2Saiya(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Mobile2Saiya(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDevList(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDevInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SaiyaServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Robot2Saiya': grpc.stream_stream_rpc_method_handler(
          servicer.Robot2Saiya,
          request_deserializer=crazy__rtc__pb2.CrazyMsg.FromString,
          response_serializer=crazy__rtc__pb2.CrazyMsg.SerializeToString,
      ),
      'Web2Saiya': grpc.stream_stream_rpc_method_handler(
          servicer.Web2Saiya,
          request_deserializer=crazy__rtc__pb2.CrazyMsg.FromString,
          response_serializer=crazy__rtc__pb2.CrazyMsg.SerializeToString,
      ),
      'Mobile2Saiya': grpc.stream_stream_rpc_method_handler(
          servicer.Mobile2Saiya,
          request_deserializer=crazy__rtc__pb2.CrazyMsg.FromString,
          response_serializer=crazy__rtc__pb2.CrazyMsg.SerializeToString,
      ),
      'GetDevList': grpc.unary_unary_rpc_method_handler(
          servicer.GetDevList,
          request_deserializer=crazy__rtc__pb2.EmailReq.FromString,
          response_serializer=crazy__rtc__pb2.DeviceList.SerializeToString,
      ),
      'GetDevInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetDevInfo,
          request_deserializer=crazy__rtc__pb2.DevReq.FromString,
          response_serializer=crazy__rtc__pb2.DeviceInfo.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'crazy_rtc.Saiya', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
